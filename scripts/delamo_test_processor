#! /usr/bin/env python

import redbaron
from redbaron import RedBaron

from delamo import processor

fstr=r"""
from delamo import simple

simple.laminate("abqparams.py",   # Basic Abaqus modeling parameters
      "ControlPointsCurved1.txt", # Mold shape
      (0,45,-45,90,0,45,-45,90,90,-45,45,0,90,-45,45,0)) # Layup
      #(0,))
"""

rb_tree=processor.tree_from_str(fstr)
assert(fstr==rb_tree.dumps())


processor.unwrap_simple(rb_tree)
processor.troubleshoot_bond_layers(rb_tree)
processor.unwrap_loops(rb_tree)
processor.annotate_bond_layers_calls(rb_tree)

# delamination info in format:
outlines=r"""
delam_outline(delamo_sourceline=653,outline=((3.0,2.0,1.2),
                                             (3.1,2.1,1.1),
                                             (1.1,0.5,1.0)))
"""
processor.apply_delam_outlines(outlines,rb_tree)  # If this fails with "No bond_layers() call found...", rerun this script with python -i, then manually run print(rb_tree.dumps()), find the sourceline of a bond_layers call and correct the parameter to delamo_sourceline in outlines= (above).  
print(rb_tree.dumps())
